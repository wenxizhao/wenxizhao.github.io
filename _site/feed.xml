<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>文溪的博客</title>
    <description>善为脚,勤为手,勇为魄,慧为眼,爱为心
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 29 Jul 2016 10:11:11 +0800</pubDate>
    <lastBuildDate>Fri, 29 Jul 2016 10:11:11 +0800</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>性能测试工具</title>
        <description>&lt;h1 id=&quot;apache-ab&quot;&gt;一、Apache ab&lt;/h1&gt;
&lt;p&gt;### 原理
ab命令会创建很多的并发访问线程，模拟多个访问者同时对某一URL地址进行访问，其原理类似CC攻击（Challenge Collapsar，挑战黑洞）。&lt;/p&gt;

&lt;p&gt;因此，既可以用来测试Apache的负载压力，也可以测试nginx、lighthttp、tomcat、IIS等其它Web服务器的压力。
### 用法
参数很多，一般我们用 -c 和 -n 参数就可以了。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; ab -c 5000 -n 600 http://127.0.0.1/index.php &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;-n后面的5000代表总共发出5000个请求；-600（模拟600个人同时访问），后面的网址表示测试的目标URL。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;特点&lt;/h3&gt;
&lt;p&gt;ab命令对发出负载的计算机要求很低，既不会占用很高CPU，也不会占用很多内存，但却会给目标服务器造成巨大的负载。自己测试使用也须注意，否则一次上太多的负载，可能造成目标服务器因资源耗完，严重时甚至导致死机。&lt;/p&gt;

&lt;p&gt;在远程对web服务器进行压力测试，往往效果不理想（因为网络延时过大），建议使用内网的另一台或者多台服务器通过内网进行测试，这样得出的数据，准确度会高很多。
# 二、Jemeter
### 原理
jmeter的架构和loadrunner原理一样，都是通过中间代理，监控和收集并发客户端发出的指令，把他们生成脚本，再发送到应用服务器，再监控服务器反馈结果的一个过程；
### 特点
支持多种服务类型测试，包括HTTP、HTTPS、SOAP、JDBC、Mail-POP3、LDAP等。可以录制、回访测试脚本。100%纯Java程序，具备高可移植性。&lt;/p&gt;

&lt;p&gt;分布式中间代理功能在jmeter中也有，这个分页式代理是指可设置多台代理在不同PC中，通过远程进行控制，即通过使用多台机器运行的谓的agant来分担load generator自身的压力，并借引来获取更大的并发用户数。&lt;/p&gt;

&lt;p&gt;jmeter可以通过逻辑控制器实现复杂的测试行为，相当于loadrunner中的测试场景；
### Jemeter与LoadRunner比较&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;对比项&lt;/th&gt;
      &lt;th&gt;JMeter&lt;/th&gt;
      &lt;th&gt;LoadRunner&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;安装&lt;/td&gt;
      &lt;td&gt;简单，下载加压即可&lt;/td&gt;
      &lt;td&gt;复杂，安装包大约1G，安装时间大于1小时&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;录制/回放模式&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;测试协议&lt;/td&gt;
      &lt;td&gt;偏少，用户可自行扩展&lt;/td&gt;
      &lt;td&gt;较多，用户不可自行扩展&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;分布式大规模压力测试&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IP欺骗功能&lt;/td&gt;
      &lt;td&gt;不支持&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;图形报表&lt;/td&gt;
      &lt;td&gt;支持（较弱）&lt;/td&gt;
      &lt;td&gt;支持（很强）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;测试逻辑控制&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;监控服务器资源（CPU，内存等）&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;功能测试&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
      &lt;td&gt;不支持&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Tue, 26 Jul 2016 15:42:32 +0800</pubDate>
        <link>http://yourdomain.com/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/2016/07/26/performance-tools.html</link>
        <guid isPermaLink="true">http://yourdomain.com/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/2016/07/26/performance-tools.html</guid>
        
        
        <category>工作笔记</category>
        
      </item>
    
      <item>
        <title>Nginx配置</title>
        <description>&lt;h1 id=&quot;http&quot;&gt;一、http转发&lt;/h1&gt;
&lt;p&gt;```
http {
    ………………………………
    server {
        listen       9999;
        server_name  localhost;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    location ^~/piccscpt/ {
		proxy_pass  http://64.1.35.23:8888$uri；;
    }
    location ^~/weixin/ {
		proxy_pass  http://64.1.35.46:7101$uri；;
    } }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;```
假设Nginx服务器位于64.1.35.46，下面以http转发配置为例子：&lt;/p&gt;

&lt;p&gt;http{}表示http模块的配置&lt;/p&gt;

&lt;p&gt;server{}虚拟主机配置&lt;/p&gt;

&lt;p&gt;listen该虚拟主机监听的端口&lt;/p&gt;

&lt;p&gt;server_name虚拟主机名称，可以是IP地址&lt;/p&gt;

&lt;p&gt;location转发规则，用正则表达式，详细语法参考官方网站。^~/piccscpt/表示以piccscpt开头的服务uri地址&lt;/p&gt;

&lt;p&gt;proxy_pass转发目的地。&lt;/p&gt;

&lt;p&gt;根据以上配置例子，http://64.1.35.46:9999/piccscpt/main.jsp，经过服务器之后，会转发到http://64.1.35.23:8888/piccscpt/main.jsp,同理http://64.1.35.46:9999/weixin/main.jsp，经过服务器之后，会转发到http://64.1.35.46:7101/weixin/main.jsp 。
# 二、TCP代理
nginx1.90对TCP协议的代理并不是默认开启的，需要在编译的时候配置 –with-stream 参数&lt;/p&gt;

&lt;p&gt;下面测试nginx代理TCP协议的配置。&lt;/p&gt;

&lt;p&gt;realserver : 10.134.241.68&lt;/p&gt;

&lt;p&gt;nginx :10.134.72.166&lt;/p&gt;

&lt;p&gt;客户端:10.129.157.168&lt;/p&gt;

&lt;p&gt;TCP监听端口:2014
```
stream {
    upstream cloudsocket {
    hash $remote_addr consistent;
    server 10.134.241.68:2014 weight=5 max_fails=3 fail_timeout=30s;
    }&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
listen 2014;
proxy_connect_timeout 1s;
proxy_timeout 3s;
proxy_pass cloudsocket;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;}
```
在客户端通过telnet连接nginx所在服务器的2014端口（telnet 10.134.72.166 2014）。&lt;/p&gt;

&lt;p&gt;在nginx机器上查看网络连接（netstat -apn| grep 2014）：
&lt;code class=&quot;highlighter-rouge&quot;&gt;
tcp 0  0 0.0.0.0:2014             0.0.0.0:*           LISTEN   6861:master
tcp 0  0 10.134.72.166:2014       10.129.157.168:8277 ESTABLISHED   6861:worker
tcp 0  0 10.134.72.166:37915      10.134.241.68:2014 ESTABLISHED   6861:worker
&lt;/code&gt;
在realserver上查看网络连接（netstat -apn| grep 2014）：
&lt;code class=&quot;highlighter-rouge&quot;&gt;
tcp 0  0 0.0.0.0:2014             0.0.0.0:0           LISTENING   3644
tcp 0  0 10.134.241.68:2014       10.134.72.166:37915 ESTABLISHED   3644
&lt;/code&gt;
可以看到nginx是给做了一个TCP连接的中转。
# 三、限制某个IP访问次数
HttpLimitReqModul用来限制连单位时间内连接数的模块，使用limit_req_zone和limit_req指令配合使用来达到限制。一旦并发连接超过指定数量，就会返回503错误。&lt;/p&gt;

&lt;p&gt;HttpLimitConnModul用来限制单个ip的并发连接数，使用limit_zone和limit_conn指令。这两个模块的区别前一个是对一段时间内的连接数限制，后者是对同一时刻的连接数限制&lt;/p&gt;

&lt;p&gt;1、HttpLimitReqModul 限制某一段时间内同一ip访问数实例 
```
http{
    …&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#定义一个名为allips的limit_req_zone用来存储session，大小是10M内存，
#以$binary_remote_addr 为key,限制平均每秒的请求为20个，
#1M能存储16000个状态，rete的值必须为整数，
#如果限制两秒钟一个请求，可以设置成30r/m

limit_req_zone $binary_remote_addr zone=allips:10m rate=20r/s;
...
server{
    ...
    location {
        ...

        #限制每ip每秒不超过20个请求，漏桶数burst为5
        #brust的意思就是，如果第1秒、2,3,4秒请求为19个，
        #第5秒的请求为25个是被允许的。
        #但是如果你第1秒就25个请求，第2秒超过20的请求返回503错误。
        #nodelay，如果不设置该选项，严格使用平均速率限制请求数，
        #第1秒25个请求时，5个请求放到第2秒执行，
        #设置nodelay，25个请求将在第1秒执行。

        limit_req zone=allips burst=5 nodelay;
        ...
    }
    ...
}
... } ``` 2、HttpLimitZoneModule 限制并发连接数实例 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;limit_zone只能定义在http作用域，limit_conn可以定义在http server location作用域
```
http{
    …&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#定义一个名为one的limit_zone,大小10M内存来存储session，
#以$binary_remote_addr 为key
#nginx 1.18以后用limit_conn_zone替换了limit_conn
#且只能放在http作用域
limit_conn_zone   one  $binary_remote_addr  10m;  
...
server{
    ...
    location {
        ...
       limit_conn one 20;          #连接数限制

       #带宽限制,对单个连接限数，如果一个ip两个连接，就是500x2k
       limit_rate 500k;            

        ...
    }
    ...
}
... } ``` # 四、白名单 1、有些时候我们不希望对搜索引擎的蜘蛛或者自己测试ip进行限制，对于特定的白名单ip我们可以借助geo指令实现。  ``` http{
 geo $limited{
    default 1;
    #google 
    64.233.160.0/19 0;
    65.52.0.0/14 0;
    66.102.0.0/20 0;
    66.249.64.0/19 0;
    72.14.192.0/18 0;
    74.125.0.0/16 0;
    209.85.128.0/17 0;
    216.239.32.0/19 0;
    #M$
    64.4.0.0/18 0;
    157.60.0.0/16 0;
    157.54.0.0/15 0;
    157.56.0.0/14 0;
    207.46.0.0/16 0;
    207.68.192.0/20 0;
    207.68.128.0/18 0;
    #yahoo
    8.12.144.0/24 0;
    66.196.64.0/18 0;
    66.228.160.0/19 0;
    67.195.0.0/16 0;
    74.6.0.0/16 0;
    68.142.192.0/18 0;
    72.30.0.0/16 0;
    209.191.64.0/18 0;
    #My IPs
    127.0.0.1/32 0;
    123.456.0.0/28 0; #example for your server CIDR
} ``` geo指令定义了一个白名单$limited变量，默认值为1，如果客户端ip在上面的范围内，$limited的值为0 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2、使用map指令映射搜索引擎客户端的ip为空串，如果不是搜索引擎就显示本身真是的ip，这样搜索引擎ip就不能存到limit_req_zone内存session中，所以不会限制搜索引擎的ip访问 
&lt;code class=&quot;highlighter-rouge&quot;&gt;
map $limited $limit {
1 $binary_remote_addr;
0 &quot;&quot;;
}
&lt;/code&gt;
3、设置limit_req_zone和limit_req 
&lt;code class=&quot;highlighter-rouge&quot;&gt;
limit_req_zone $limit zone=foo:1m rate=10r/m;
limit_req zone=foo burst=5;
&lt;/code&gt;
参考文档http://itindex.net/detail/51468-nginx-%E9%99%90%E5%88%B6-ip&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Jul 2016 15:42:32 +0800</pubDate>
        <link>http://yourdomain.com/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/2016/07/21/nginx.html</link>
        <guid isPermaLink="true">http://yourdomain.com/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/2016/07/21/nginx.html</guid>
        
        
        <category>工作笔记</category>
        
      </item>
    
      <item>
        <title>SQL优化</title>
        <description>&lt;h1 id=&quot;sql&quot;&gt;SQL优化&lt;/h1&gt;
&lt;p&gt;### 索引
#### 一.索引的开销
索引的建立需要空间。&lt;/p&gt;

&lt;p&gt;索引的维护需要额外成本&lt;/p&gt;

&lt;p&gt;insert:插入数据，索引B+树添加节点。&lt;/p&gt;

&lt;p&gt;update:更新数据，索引B+树调整。&lt;/p&gt;

&lt;p&gt;delete：删数据，索引B+树打作废标记。
#### 二.不使用索引的情况
- 特别的函数&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; where DATE(flowintime) = &quot;2009/02/06“ &lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;字段类型转换&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; where operatorcode = 5104010203 &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;int转char&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;选择度是决定是否使用索引的关键&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如&lt;/p&gt;

&lt;p&gt;where company like ‘510401%’
会使用索引，where company like ‘%510401%’不会使用索引。&lt;/p&gt;

&lt;p&gt;Where useflag[1,2]=‘11’会使用索引，Where useflag[2,3]=‘11’不会使用索引。&lt;/p&gt;

&lt;h5 id=&quot;section&quot;&gt;三.建索引建议&lt;/h5&gt;

&lt;h6 id=&quot;section-1&quot;&gt;1. 组合索引是顺序的，不是组合的。&lt;/h6&gt;

&lt;p&gt;如，索引（a,b,c），（a,b）会走索引，（b,c）不会走索引（新版informix会走索引）。&lt;/p&gt;

&lt;p&gt;有组合索引（a,b,c）时，索引（a,b）和（a）就不必要了，索引（a,c）必要。&lt;/p&gt;

&lt;h6 id=&quot;section-2&quot;&gt;2. 选择重复度低的列建索引，最好选择重复度为1的列。如果非要在重读度高的列建索引，与另一个重复度低的列建组合索引。&lt;/h6&gt;

&lt;p&gt;例如，useflag，只有0,1两个值，建索引效率就很低。&lt;/p&gt;

&lt;p&gt;索引分析SQL语句：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
select 	tabname,     -- 表名
	a.nrows,		-- 表的记录数、
	a.rowsize,	-- 记录长度
	idxname,	-- 索引名称
	idxtype,		-- 索引类型
	nunique,		-- 首列的唯一值
	a.nrows/nunique as dupl,	-- 重复度
	levels 		-- 索引层次
from systables a,sysindexes bwhere a.tabid = b.tabid and a.tabid&amp;gt;=100
And idxtype = “D”
And nunique &amp;gt; 0
Order by 7 desc
&lt;/code&gt;&lt;/p&gt;

&lt;h6 id=&quot;section-3&quot;&gt;3. 创建索引最好单独制定数据空间，不要与表空间放一起。&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; create index idx1 on table(col) in idxdbs; &lt;/code&gt;&lt;/p&gt;

&lt;h6 id=&quot;online&quot;&gt;4. 创建或删除索引时，加上online，可以不用独占表。&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; create index idx1 on tab01(deskdate) in idxdbs online; &lt;/code&gt;&lt;/p&gt;

&lt;h6 id=&quot;section-4&quot;&gt;5. 对某个字段值的计算结果作为索引。&lt;/h6&gt;

&lt;p&gt;（1）如果需要对某个字段值的计算结果作为索引，可以创建函数索引(注意:创建或删除函数索引不能用online).&lt;/p&gt;

&lt;p&gt;首先创建函数
&lt;code class=&quot;highlighter-rouge&quot;&gt;
CREATE FUNCTION getdealflag(pstr CHAR(255)) returns CHAR(1) WITH (NOT VARIANT);
IF pstr[1,1] = &#39;0&#39; OR pstr[1,1] = &#39;1’ THEN
    IF pstr[4,5] = &#39;00’  AND pstr[7] = &#39;0&#39; THEN
        RETURN &#39;1&#39;;
    END IF;
END IF;
RETURN &#39;0&#39;;
END FUNCTION;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;创建索引&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
create index ininterfacei08 on sffininterface (mergeno,
getdealflag(dealflag),comcode,documenttype,useflag)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;SQL使用&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
where mergeno=‘aaa’ and getdealflag(dealflag)=‘1’ and comcode matches ‘5101*’
and documenttype in (‘01’,’02’) and useflag[1] = ‘1’
&lt;/code&gt;
（2） 如果以某几个字段为条件，取出列的某个字段的最大或最小值，可以创建包含运算字段的复合索引。注意，运算的字段一定要放在索引的最后一个字段。&lt;/p&gt;

&lt;p&gt;创建索引&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
create index billprintdei05 on SffBillPrintDe (opcode, billtype , billno, billedition , sffid)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;使用例子&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
where d1.sffid=(      SELECT MAX(sffid) FROM
    sffbillprintde WHERE billno is not null
    and billedition is not null
     and billtype=&#39;701&#39; AND
    opCode=&#39;5104970025&#39;  )
&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-5&quot;&gt;四.使用索引技巧&lt;/h5&gt;
&lt;p&gt;###### 1. 当实体表体量大，临时表体量小时。实际列加函数，阻止起走索引，而是遍历临时表。
例：sffdocdetail是实表，数据量大；tmp是临时表，量小。
&lt;code class=&quot;highlighter-rouge&quot;&gt;
select * from sffdocdetail a.tmp b
where a.sffid=b.sffid
and trim(a.comcode)=&#39;5101&#39;
and date(a.deskdate)=today;
&lt;/code&gt;
###### 2.类型转换成索引列的类型
例，tcol4为char型，suffixno为int型，如果不转换，使用不到tcol4的索引。
e.tcol4=cast(a.suffixno as char(20))
##### 五.SQL执行优先级&lt;/p&gt;

&lt;p&gt;如果是多CPU环境，在SQL语句前加上语句：set pdqpriority 30 （0&amp;lt;=数字&amp;lt; 100)，可以提高SQL的查询速。&lt;br /&gt;
注意：CPU个数不是很多，后台执行的SQL查询会话较多，不要使用PDQ
可以通过onstat –u命令，检查会话是否有并行处理。&lt;br /&gt;
创建索引时，使用PDQ，会加快执行速度。&lt;/p&gt;

&lt;h5 id=&quot;sql-1&quot;&gt;五.SQL监控分析&lt;/h5&gt;
&lt;p&gt;###### 1.onstat监控
onstat 命令，可以查看日志、用户、磁盘等等&lt;br /&gt;
onstat -u（用户线索和事务  ）
&lt;code class=&quot;highlighter-rouge&quot;&gt;
address  flags   sessid   user     tty      wait     tout locks nreads   nwrites
c57f1018 ---P--D 1        informix -        0        0    0     757      36481
c57f1504 ---P--F 0        informix -        0        0    0     0        377273
c57f19f0 ---P--- 5        informix -        0        0    0     0        6742
&lt;/code&gt;
其中：flages字段的含义:  &lt;br /&gt;
第一列：（S：等待mutex；Y：等待条 件；L：等待锁；B：等待缓冲区；  C：等待检查点；X：长事务清理；G：等待长缓冲写；T：等待事务）  第二列：（*：事务执行时，发生I/O错误） &lt;br /&gt;
第三列：（A：正在备份；B：操作已被记录在日志中；P：分布处理已准备好； C：正在提交；R：正在回滚）&lt;br /&gt;
第四列：（P：会话的主线索&lt;br /&gt;
第五列：（R：在read rsam 调用中；X：进程在关键分区&lt;br /&gt;
第七列：（M：特殊监控；D：特殊线索；C：清理线索；F：特殊清页进程；  B：特殊B+树清页线索）&lt;/p&gt;

&lt;p&gt;如果线索持续处于某一种状态(L-|PX|PR|BP) ，则一般说明有性能问题&lt;br /&gt;
###### 2.一些监控命令
` onstat -u -r 5|grep -E “ B-|L-|active “ `
某个会话连续出现，即等待状态持续较长时间&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; onstat -u -r 5|grep -E &quot; PR|PX|active “ &lt;/code&gt;
某个会话连续出现，即说明关键区操作较长，有性能隐患&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; onstat -u |grep -E &quot;PX|PR&quot;|awk &#39;{print &quot;onstat -g ses &quot;$3}&#39;|sh &amp;gt;&amp;gt;PXR.ou &lt;/code&gt;
分析即时出现PR或PX状态的会话及SQL&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; onstat -u |grep -E &quot;B-|L-&quot;|awk &#39;{print &quot;onstat -g ses &quot;$3}&#39;|sh &amp;gt;&amp;gt;BL.out &lt;/code&gt;
分析即时出现等待状态的会话及SQL&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; onstat –g ses &amp;lt;sid&amp;gt; &lt;/code&gt;
` onstat –g stm &lt;sid&gt; `
可以看到有问题会话的SQL语句。  
` SET EXPLAIN ON 或 SET EXPLAIN ON AVOID_EXECUTE `
sqexplain.out可以分析SQL执行策略&lt;/sid&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; onmode –Y &lt;/code&gt;
杀掉有问题的SQL。&lt;br /&gt;
##### 六.子查询
相关子查询：相关子查询的执行依赖于外部查询的数据，外部查询执行一行，子查询就执行一次。如exists，not exists。&lt;br /&gt;
无关子查询：是独立于外部查询的子查询，子查询总共执行一次，执行完毕后将值传递给外部查询。如in。&lt;/p&gt;

&lt;p&gt;子查询相当于自行确定了查询路径，放弃了DB优化的机会。
`  select ** from A where id in (select id from B) `要求A应有较高的选择度，B的结果集合应该较小。&lt;br /&gt;
在实际中，尽可能用exists和not exists代替in或not in。&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Jul 2016 15:42:32 +0800</pubDate>
        <link>http://yourdomain.com/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/2016/07/21/SQL-notes.html</link>
        <guid isPermaLink="true">http://yourdomain.com/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/2016/07/21/SQL-notes.html</guid>
        
        
        <category>工作笔记</category>
        
      </item>
    
      <item>
        <title>存储过程笔记</title>
        <description>&lt;h6 id=&quot;section&quot;&gt;一、变量初始化&lt;/h6&gt;
&lt;p&gt;let语句，或者select into&lt;/p&gt;

&lt;h6 id=&quot;section-1&quot;&gt;二、执行&lt;/h6&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; execute function f() into v_bianliang;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; call f(); &lt;/code&gt;&lt;/p&gt;

&lt;h6 id=&quot;section-2&quot;&gt;三、调试&lt;/h6&gt;
&lt;p&gt;set debug file to ‘目录/文件名’&lt;/p&gt;

&lt;p&gt;trace on;&lt;/p&gt;

&lt;p&gt;例子:
``` 
drop function sp_ckt_check;
CREATE FUNCTION ccpqry.sp_ckt_check(v_licenseno varchar(8))
returning date as operateDate,int as clausecode,int as clausetype,
int as enrolldate,int as seatcount,int as purchaseprice,
int as chesun,int as sanzhe,int as zuowei&lt;/p&gt;

&lt;p&gt;define v_proposalno char(22);
define v_clausecode int;
define v_clausetype	int;
define v_enrolldate	int;
define v_seatcount	int;
define v_purchaseprice	int;
define v_kindcode_cs int;
define v_kindcode_sz int;
define v_kindcode_zw int;
define v_operateDate date;
define v_procname	varchar(50);&lt;/p&gt;

&lt;p&gt;let v_proposalno = null;	
let v_procname = ‘sp_ckt_check’;
–SET DEBUG FILE TO ‘proctrace/trace_’||v_procname||’.out’;
–trace on;&lt;/p&gt;

&lt;p&gt;select b.proposalno into v_proposalno
from prpcitem_car a,prpcmain b,prpcopymain c
where licenseno=v_licenseno
and b.riskcode=’DAA’
and a.proposalno = b.proposalno 
and c.applyno=b.proposalno
and date(c.inserttimeforhis)&amp;gt;=’20160201’
and b.underwriteflag in (‘1’,’3’)
and b.othflag[3]&amp;lt;&amp;gt;’1’
and b.othflag[4]&amp;lt;&amp;gt;’1’
and b.othflag[6]&amp;lt;&amp;gt;’1’;
–trace v_proposalno;&lt;/p&gt;

&lt;p&gt;select count(*) into v_clausecode
from prpcengage
where proposalno=v_proposalno
and clausecode in (‘9900444’,’9900445’,’9900446’);
–trace v_clausecode;&lt;/p&gt;

&lt;p&gt;select count(*) into v_clausetype
from prpcitem_car
where proposalno=v_proposalno
and clausetype = “F42”;
–trace v_clausetype;&lt;/p&gt;

&lt;p&gt;select count(*) into v_seatcount
from prpcitem_car
where proposalno=v_proposalno
and seatcount &amp;lt;= “7”;
–trace v_seatcount;&lt;/p&gt;

&lt;p&gt;select count(*) into v_purchaseprice
from prpcitem_car
where proposalno=v_proposalno
and purchaseprice &amp;lt; 500000;		
–trace v_purchaseprice;&lt;/p&gt;

&lt;p&gt;select count(*) into v_enrolldate
from prpcitem_car c,prpcopymain d
where c.proposalno=d.applyno
and c.proposalno=v_proposalno
and date(d.inserttimeforhis)-date(c.enrolldate)&amp;lt;2920;
–trace v_enrolldate;&lt;/p&gt;

&lt;p&gt;select date(d.inserttimeforhis) into v_operateDate
from prpcopymain d
where d.applyno=v_proposalno;&lt;/p&gt;

&lt;p&gt;select count(distinct proposalno) into v_kindcode_cs
from prpcitemkind
where proposalno=v_proposalno
and kindcode = “050202”;
select count(distinct proposalno) into v_kindcode_sz
from prpcitemkind
where proposalno=v_proposalno
and kindcode = “050602”–三者险（限额50万以上）
and amount &amp;gt;= “500000”;
–trace v_kindcode_sz;&lt;/p&gt;

&lt;p&gt;select count(distinct proposalno) into v_kindcode_zw
from prpcitemkind
where proposalno=v_proposalno
and kindcode = “050712”;RETURN 	v_operateDate,v_clausecode,v_clausetype,v_enrolldate,v_seatcount,v_purchaseprice,v_kindcode_cs,v_kindcode_sz,v_kindcode_zw;&lt;/p&gt;

&lt;p&gt;end function;                                            &lt;br /&gt;
```&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Jul 2016 15:42:32 +0800</pubDate>
        <link>http://yourdomain.com/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/2016/07/13/sql-procedure.html</link>
        <guid isPermaLink="true">http://yourdomain.com/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/2016/07/13/sql-procedure.html</guid>
        
        
        <category>工作笔记</category>
        
      </item>
    
      <item>
        <title>从保险数据看消费者最青睐的汽车品牌</title>
        <description>&lt;p&gt;除了汽车经销商，保险公司恐怕就是跟新车销售关系最紧密的团体了。保险公司每销售一笔保单，会记录对应车辆的新旧情况和品牌，为此，可以很容易统计出哪个品牌的汽车销售比较好，比较受消费者青睐。【注】数据样本是我公司（四川）2014年车商渠道购买保险的所有新车。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;汽车海选&lt;/h2&gt;

&lt;p&gt;对每个品牌的销售量进行排序，下图（新车品牌）展示了2014年数量超过1000万台的品牌。需要解释的是，一汽奥迪代表合资奥迪，不包括进口奥迪。下文中无特殊说明，“一汽奥迪”代表合资奥迪；“奥迪”代表进口奥迪。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/xc.png&quot; alt=&quot;xc&quot; /&gt;&lt;/p&gt;

&lt;p&gt;铛~铛~铛~，最受消费者青睐的前10名出炉了：&lt;/p&gt;

&lt;p&gt;一汽大众、上海大众、东风日产、长安、北京现代、长安福特、上海通用雪佛兰、一汽奥迪、上海通用别克、上海通用五菱&lt;/p&gt;

&lt;p&gt;汽车整体销售数量是，合资车&amp;gt;国产车&amp;gt;进口车。下面从分这三类再看一看。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;合资车里大众最受青睐&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/hzc.png&quot; alt=&quot;hzc&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图（合资车）对合资车数量进行了排序，展示了前21名。第21名是四川一汽丰田，它是四川最大的汽车合资项目，2014年在我公司买保险的车辆有4090台，它的销量在四川地区不是特别突出，也不是特别差劲，表现平平。&lt;/p&gt;

&lt;p&gt;一汽大众是数量最多的，52538台。上海大众紧随其后，42349台。可见大众最受大众青睐（故意要用两个“大众”，哈哈~）接下来我们看看哪些车系最受青睐。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/yqdz.png&quot; alt=&quot;yqdz&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一汽大众旗下迈腾、速腾、捷达、宝来表现比较平均。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/shdz.png&quot; alt=&quot;shdz&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上海大众旗下朗逸、途观、波罗、帕萨特表现比较平均。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/dfrc.png&quot; alt=&quot;dfrc&quot; /&gt;&lt;/p&gt;

&lt;p&gt;东风日产旗下轩逸、逍客、天籁表现比较平均。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;国产车里长安最受青睐&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/gcc.png&quot; alt=&quot;gcc&quot; /&gt;&lt;/p&gt;

&lt;p&gt;国产车里面，长安表现最突出，几乎是第二名上海通用五菱销量的一倍多接近两倍。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/ca.png&quot; alt=&quot;ca&quot; /&gt;&lt;/p&gt;

&lt;p&gt;长安旗下的各车系销量差别很大，长安之星表现最突出，其次逸动、长安CS35、欧诺表现不相上下。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/tywl.png&quot; alt=&quot;tywl&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上海通用五菱旗下，宏光占比最大。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/byd.png&quot; alt=&quot;byd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;比亚迪车系较多，其中速锐、比亚迪S6、比亚迪F3的占比比较大，其他车系销量表现就不是很突出。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;进口车里宝马最受青睐&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/jkc.png&quot; alt=&quot;jkc&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图（进口车）展示了销量前20名。可以看出宝马销量最好，路虎、奔驰紧随其后，大众和奥迪位于第三梯队。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/bm.png&quot; alt=&quot;bm&quot; /&gt;&lt;/p&gt;

&lt;p&gt;宝马的车系也很多，数量差异比较大，其中宝马X5和宝马X3销量表现比较好。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/lh.png&quot; alt=&quot;lh&quot; /&gt;&lt;/p&gt;

&lt;p&gt;路虎的车系不多，销量表现比较平均。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian2/bc.png&quot; alt=&quot;bc&quot; /&gt;&lt;/p&gt;

&lt;p&gt;奔驰的车系也比较多，奔驰S级，ML级，GL级销量相对比较突出。&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Jul 2016 15:42:32 +0800</pubDate>
        <link>http://yourdomain.com/%E4%BF%9D%E9%99%A9/2016/07/12/favored-car.html</link>
        <guid isPermaLink="true">http://yourdomain.com/%E4%BF%9D%E9%99%A9/2016/07/12/favored-car.html</guid>
        
        
        <category>保险</category>
        
      </item>
    
      <item>
        <title>一条数据狗的车辆保险研究</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;不想再说“不知道”&lt;/h3&gt;

&lt;p&gt;毕业进了保险坑，身边的朋友在需要保险的时候会想到向我咨询保险，每次我都非常惭愧的说：我就是一个管系统的，不懂业务，不好意思哈，不知道。随着时间的推移，偶尔从业务部门同事那听说一点保险知识，想分享给别人，又怕自己知道的太片面太局限。于是，想着利用自己的优势，从数据上全面认识保险。下面就车险数据做了一些分析，希望对大家买车险有帮助。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;让数据说话&lt;/h3&gt;

&lt;p&gt;数据样本为2015年1月份承保的车辆，以及这些车辆在2015年的出险情况。在分析过程中发现了一些有趣的现象，让我细细道来。&lt;/p&gt;

&lt;p&gt;一、最赔钱的是货车&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian1/clausetype.jpg&quot; alt=&quot;clausetype&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图是不同用途的车辆分析情况。简单粗暴地解释，投保数就是有多少车买保险，报案数就是这些买保险的车中有多少出险报案。出险比例就是报案数除以投保数。&lt;/p&gt;

&lt;p&gt;从图上可以看出货车的出险比例最高，2015年1月份有679辆货车买保险，其中141辆车在2015年发生过事故，计算出它的出险比例为20.77%。紧接着是特种车类、越野车类、轿车类出险比例高（特种车是指装载油料、气体、液体或者用于清洁、装卸、搅拌、起重等各种专用机动车）。在百度搜索“货车出险率”可以搜到曾经保险公司因为货车出现率高而拒保的新闻，也有种说法，对保险公司而言，货车就是赔本生意。可见，我这个分析结果跟现实情况表现一致，我选取的样本比较可信。&lt;/p&gt;

&lt;p&gt;二、车越好，报案的次数越多&lt;/p&gt;

&lt;p&gt;基于这个样本，我分析了一下不同国家生产的车辆出险比例，国产车的出险比例9.58%，合资车出险比例11.06%，进口车出险比例13.67%。国产车的出险比例比较小，进口车的出险比例反而高，这个结果有点意外。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian1/country.png&quot; alt=&quot;country&quot; /&gt;&lt;/p&gt;

&lt;p&gt;之前我的结论是，数据证明我们需要对国产车有信心。一个朋友给了另一种更合理的解释。国产车一般便宜，出险如果不是大事故，为了不影响第二年的保费，车主会选择自己去修，所以出险比例低。进口车，修费用高，车主一般会选择报保险，因此出现率比较高。车险费改之后（费改之后出险次数，会影响第二年的保费），小额维修费自己掏，大额维修费报保险的现象会更明显。&lt;/p&gt;

&lt;p&gt;三、买了不吃亏、买了不上当的险种&lt;/p&gt;

&lt;p&gt;关于车险，大家普遍关心的还是买什么险，于是我统计了一下各险种的购买和出险情况。数据剔除了购买数据少，出险数据也少的个别险种，比如“机动车停驶损失险条款”，2015年1月卖出3份，全年出险1次。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian1/kindcode.png&quot; alt=&quot;kindcode&quot; /&gt;&lt;/p&gt;

&lt;p&gt;假设每月销售情况一致的，从图上可以看出车上人员责任险（包括司机和乘客）出险次数少，即便如此，顾客购买车上人员责任险的意愿仍比较强烈，毕竟一旦发生交通事故，身上人员没有保险的后果是一般人难以承受的。同样有比较高购买热情的还有盗抢险、机动车损失保险、第三者责任保险、交强险。&lt;/p&gt;

&lt;p&gt;购买车险的朋友，多多少少都担心买少了得不到保障，又担心买多了浪费钱。有了这个分析，可以考虑购买车上人员责任险、盗抢险、机动车损失保险、第三者责任保险，这些险种是广大人民群众的集体智慧的结晶。交强险必须买，这就不用强调了。&lt;/p&gt;

&lt;p&gt;至于玻璃单独破损险、新增加设备损失险、车身划痕损失险，根据自身需求来买。毕竟保险的本质是服务，买不买取决于你需不需要这项服务。&lt;/p&gt;

&lt;p&gt;四、什么车一定要买盗抢险&lt;/p&gt;

&lt;p&gt;俗话说，不怕贼偷就怕贼惦记，哪个品牌的车容易被惦记呢？以2015年全年的盗抢险数据为样本，让我们看看哪些车容易被贼惦记。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian1/jqx.png&quot; alt=&quot;jqx&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2015年全年共有79个品牌发生1197次盗抢险，图上只展示了超过10次的品牌。从图上可以看出，上海通用五菱、东方本田、广汽本田的车被惦记的次数最多。接下来再详细分析。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian1/shtywl.png&quot; alt=&quot;shtywl&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2015年上海通用五菱共发生227次盗抢险，其中宏光占了162次，荣光占了51次。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian1/dfbt.png&quot; alt=&quot;dfbt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;东风本田用发生216次盗抢险，其中思威CR-V占了188次，杰德占了13次。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian1/gqbt.png&quot; alt=&quot;gqbt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;广汽本田共发生188次盗抢险，雅阁占了106次，歌诗图占了31次。&lt;/p&gt;

&lt;p&gt;这几张图出来之后，我只想问宏光、思威CR-V、雅阁的车主们，你们的车还好吗？如果偷车贼有一张数据地图的话，他心目中的易盗车辆，应该跟我的分析一致。&lt;/p&gt;

&lt;p&gt;目前，汽车安全防盗配置主要包括发动机电子防盗、车内中控锁、遥控钥匙、无钥匙进入系统、无钥匙启动系统。车辆容易被盗跟车辆的安全配置有一定关系，除了歌诗图的配置相对安全，其他易盗车辆的安全配置都比较少。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/baoxian1/dzs.png&quot; alt=&quot;dzs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然，安全防盗配置是影响汽车防盗的重要因素，但不是唯一决定因素。车辆停放位置、汽车保有量、配件流通等因素都有可能影响盗抢风险。结论不用多说，该买盗抢险的赶紧买，该升级车锁的赶紧升级。&lt;/p&gt;

</description>
        <pubDate>Sun, 03 Jul 2016 15:42:32 +0800</pubDate>
        <link>http://yourdomain.com/%E4%BF%9D%E9%99%A9/2016/07/03/car-insurence.html</link>
        <guid isPermaLink="true">http://yourdomain.com/%E4%BF%9D%E9%99%A9/2016/07/03/car-insurence.html</guid>
        
        
        <category>保险</category>
        
      </item>
    
  </channel>
</rss>

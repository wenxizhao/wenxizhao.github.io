---
layout: post
title:  "Nginx配置"
date:   2016-07-21 15:42:32 +0800
categories: work notes
---
#  一、http转发
```
http {
    ………………………………
    server {
        listen       9999;
        server_name  localhost;

        location ^~/piccscpt/ {
			proxy_pass  http://64.1.35.23:8888$uri；;
        }
        location ^~/weixin/ {
			proxy_pass  http://64.1.35.46:7101$uri；;
        }
}

```
假设Nginx服务器位于64.1.35.46，下面以http转发配置为例子：

http{}表示http模块的配置

server{}虚拟主机配置

listen该虚拟主机监听的端口

server_name虚拟主机名称，可以是IP地址

location转发规则，用正则表达式，详细语法参考官方网站。^~/piccscpt/表示以piccscpt开头的服务uri地址

proxy_pass转发目的地。

根据以上配置例子，http://64.1.35.46:9999/piccscpt/main.jsp，经过服务器之后，会转发到http://64.1.35.23:8888/piccscpt/main.jsp,同理http://64.1.35.46:9999/weixin/main.jsp，经过服务器之后，会转发到http://64.1.35.46:7101/weixin/main.jsp 。
# 二、TCP代理
nginx1.90对TCP协议的代理并不是默认开启的，需要在编译的时候配置 --with-stream 参数

下面测试nginx代理TCP协议的配置。

realserver : 10.134.241.68

nginx :10.134.72.166

客户端:10.129.157.168

TCP监听端口:2014
```
stream {
    upstream cloudsocket {
    hash $remote_addr consistent;
    server 10.134.241.68:2014 weight=5 max_fails=3 fail_timeout=30s;
    }

    server {
    listen 2014;
    proxy_connect_timeout 1s;
    proxy_timeout 3s;
    proxy_pass cloudsocket;
    }

}
```
在客户端通过telnet连接nginx所在服务器的2014端口（telnet 10.134.72.166 2014）。

在nginx机器上查看网络连接（netstat -apn| grep 2014）：
```
tcp 0  0 0.0.0.0:2014             0.0.0.0:*           LISTEN   6861:master
tcp 0  0 10.134.72.166:2014       10.129.157.168:8277 ESTABLISHED   6861:worker
tcp 0  0 10.134.72.166:37915      10.134.241.68:2014 ESTABLISHED   6861:worker
```
在realserver上查看网络连接（netstat -apn| grep 2014）：
```
tcp 0  0 0.0.0.0:2014             0.0.0.0:0           LISTENING   3644
tcp 0  0 10.134.241.68:2014       10.134.72.166:37915 ESTABLISHED   3644
```
可以看到nginx是给做了一个TCP连接的中转。
# 三、限制某个IP访问次数
HttpLimitReqModul用来限制连单位时间内连接数的模块，使用limit_req_zone和limit_req指令配合使用来达到限制。一旦并发连接超过指定数量，就会返回503错误。 

HttpLimitConnModul用来限制单个ip的并发连接数，使用limit_zone和limit_conn指令。这两个模块的区别前一个是对一段时间内的连接数限制，后者是对同一时刻的连接数限制

1、HttpLimitReqModul 限制某一段时间内同一ip访问数实例 
```
http{
    ...

    #定义一个名为allips的limit_req_zone用来存储session，大小是10M内存，
    #以$binary_remote_addr 为key,限制平均每秒的请求为20个，
    #1M能存储16000个状态，rete的值必须为整数，
    #如果限制两秒钟一个请求，可以设置成30r/m

    limit_req_zone $binary_remote_addr zone=allips:10m rate=20r/s;
    ...
    server{
        ...
        location {
            ...

            #限制每ip每秒不超过20个请求，漏桶数burst为5
            #brust的意思就是，如果第1秒、2,3,4秒请求为19个，
            #第5秒的请求为25个是被允许的。
            #但是如果你第1秒就25个请求，第2秒超过20的请求返回503错误。
            #nodelay，如果不设置该选项，严格使用平均速率限制请求数，
            #第1秒25个请求时，5个请求放到第2秒执行，
            #设置nodelay，25个请求将在第1秒执行。

            limit_req zone=allips burst=5 nodelay;
            ...
        }
        ...
    }
    ...
}
```
2、HttpLimitZoneModule 限制并发连接数实例 

limit_zone只能定义在http作用域，limit_conn可以定义在http server location作用域
```
http{
    ...

    #定义一个名为one的limit_zone,大小10M内存来存储session，
    #以$binary_remote_addr 为key
    #nginx 1.18以后用limit_conn_zone替换了limit_conn
    #且只能放在http作用域
    limit_conn_zone   one  $binary_remote_addr  10m;  
    ...
    server{
        ...
        location {
            ...
           limit_conn one 20;          #连接数限制

           #带宽限制,对单个连接限数，如果一个ip两个连接，就是500x2k
           limit_rate 500k;            

            ...
        }
        ...
    }
    ...
}
```
# 四、白名单
1、有些时候我们不希望对搜索引擎的蜘蛛或者自己测试ip进行限制，对于特定的白名单ip我们可以借助geo指令实现。 
```
http{
     geo $limited{
        default 1;
        #google 
        64.233.160.0/19 0;
        65.52.0.0/14 0;
        66.102.0.0/20 0;
        66.249.64.0/19 0;
        72.14.192.0/18 0;
        74.125.0.0/16 0;
        209.85.128.0/17 0;
        216.239.32.0/19 0;
        #M$
        64.4.0.0/18 0;
        157.60.0.0/16 0;
        157.54.0.0/15 0;
        157.56.0.0/14 0;
        207.46.0.0/16 0;
        207.68.192.0/20 0;
        207.68.128.0/18 0;
        #yahoo
        8.12.144.0/24 0;
        66.196.64.0/18 0;
        66.228.160.0/19 0;
        67.195.0.0/16 0;
        74.6.0.0/16 0;
        68.142.192.0/18 0;
        72.30.0.0/16 0;
        209.191.64.0/18 0;
        #My IPs
        127.0.0.1/32 0;
        123.456.0.0/28 0; #example for your server CIDR
    }
```
geo指令定义了一个白名单$limited变量，默认值为1，如果客户端ip在上面的范围内，$limited的值为0 

2、使用map指令映射搜索引擎客户端的ip为空串，如果不是搜索引擎就显示本身真是的ip，这样搜索引擎ip就不能存到limit_req_zone内存session中，所以不会限制搜索引擎的ip访问 
```
map $limited $limit {
1 $binary_remote_addr;
0 "";
}
```
3、设置limit_req_zone和limit_req 
```
limit_req_zone $limit zone=foo:1m rate=10r/m;
limit_req zone=foo burst=5;
```
参考文档http://itindex.net/detail/51468-nginx-%E9%99%90%E5%88%B6-ip